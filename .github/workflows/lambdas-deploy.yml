name: Lambda Deploy Workflow

on:
  push:
    branches:
      - main

jobs:
  load-variables:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Load variables from YAML with yq
        id: load-vars
        run: |
          # Carregar variáveis do YAML
          export TERRAFORM_DIRECTORY=$(yq '.terraform.directory' .github/workflows/variables-lambda.yml)
          export LAMBDA_RUNTIME=$(yq '.lambda.runtime' .github/workflows/variables-lambda.yml)
          export LAMBDAS=$(yq -o=json '.lambda.lambdas' .github/workflows/variables-lambda.yml)
          export AWS_REGION=$(yq '.github_env.aws.region' .github/workflows/variables-lambda.yml)
          export AWS_ACCESS_KEY=$(yq '.github_env.aws.access_key' .github/workflows/variables-lambda.yml)
          export AWS_SECRET_KEY=$(yq '.github_env.aws.secret_key' .github/workflows/variables-lambda.yml)
          echo "TERRAFORM_DIRECTORY=$TERRAFORM_DIRECTORY"
          echo "LAMBDA_RUNTIME=$LAMBDA_RUNTIME"
          echo "LAMBDAS=$LAMBDAS"

  terraform-validate:
    runs-on: ubuntu-latest
    needs: load-variables

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.TERRAFORM_DIRECTORY }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ env.TERRAFORM_DIRECTORY }}

  package-lambdas:
    runs-on: ubuntu-latest
    needs: terraform-validate  # Só empacota após a validação do Terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Package Lambdas
        run: |
          lambdas=$(echo '${{ env.LAMBDAS }}' | jq -c '.[]')
          for lambda in $lambdas; do
            name=$(echo $lambda | jq -r '.name')
            source=$(echo $lambda | jq -r '.source')
            zip=$(echo $lambda | jq -r '.zip')
            echo "Packaging Lambda: $name"
            if [ -f "$source/requirements.txt" ]; then
              python3 -m venv venv
              source venv/bin/activate
              pip install -r "$source/requirements.txt"
              deactivate
            fi
            mkdir -p "$(dirname $zip)"
            cp -r "$source/"* "$(dirname $zip)/"
            cd "$(dirname $zip)"
            zip -r "$(basename $zip)" .
            cd ../../
          done

  terraform-deploy:
    runs-on: ubuntu-latest
    needs: package-lambdas  # Só faz o deploy após o empacotamento das Lambdas

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ env.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ${{ env.TERRAFORM_DIRECTORY }}
