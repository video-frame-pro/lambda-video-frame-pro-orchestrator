name: Lambda Deploy Workflow

on:
  push:
    branches:
      - main

jobs:
  load-variables:
    runs-on: ubuntu-latest

    outputs:
      terraform-directory: ${{ steps.load-vars.outputs.terraform-directory }}
      lambda-runtime: ${{ steps.load-vars.outputs.lambda-runtime }}
      lambdas: ${{ steps.load-vars.outputs.lambdas }}
      aws-region: ${{ steps.load-vars.outputs.aws-region }}
      aws-access-key: ${{ steps.load-vars.outputs.aws-access-key }}
      aws-secret-key: ${{ steps.load-vars.outputs.aws-secret-key }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Load variables from YAML
        id: load-vars
        run: |
          import yaml
          with open('.github/workflows/variables-lambda.yml', 'r') as file:
              config = yaml.safe_load(file)
          print(f"::set-output name=terraform-directory::{config['terraform']['directory']}")
          print(f"::set-output name=lambda-runtime::{config['lambda']['runtime']}")
          print(f"::set-output name=lambdas::{config['lambda']['lambdas']}")
          print(f"::set-output name=aws-region::{config['github_env']['aws']['region']}")
          print(f"::set-output name=aws-access-key::{config['github_env']['aws']['access_key']}")
          print(f"::set-output name=aws-secret-key::{config['github_env']['aws']['secret_key']}")

  terraform-validate:
    runs-on: ubuntu-latest
    needs: load-variables

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ needs.load-variables.outputs.terraform-directory }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ needs.load-variables.outputs.terraform-directory }}

  package-lambdas:
    runs-on: ubuntu-latest
    needs: terraform-validate  # Só empacota após a validação do Terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Package Lambdas
        run: |
          import os, subprocess, json
          lambdas = json.loads('${{ needs.load-variables.outputs.lambdas }}')
          for lambda_def in lambdas:
              name = lambda_def['name']
              source = lambda_def['source']
              zip_path = lambda_def['zip']
              print(f"Packaging Lambda: {name}")
              if os.path.exists(f"{source}/requirements.txt"):
                  subprocess.run(['python3', '-m', 'venv', 'venv'], check=True)
                  subprocess.run(['venv/bin/pip', 'install', '-r', f"{source}/requirements.txt"], check=True)
              os.makedirs(os.path.dirname(zip_path), exist_ok=True)
              subprocess.run(['cp', '-r', f"{source}/.", os.path.dirname(zip_path)], check=True)
              subprocess.run(['zip', '-r', zip_path, '.'], cwd=os.path.dirname(zip_path), check=True)

  terraform-deploy:
    runs-on: ubuntu-latest
    needs: package-lambdas  # Só faz o deploy após o empacotamento das Lambdas

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ needs.load-variables.outputs.aws-access-key }}
          aws-secret-access-key: ${{ needs.load-variables.outputs.aws-secret-key }}
          aws-region: ${{ needs.load-variables.outputs.aws-region }}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ${{ needs.load-variables.outputs.terraform-directory }}
